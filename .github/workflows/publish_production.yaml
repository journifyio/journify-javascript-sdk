name: Publish to production CDN and npm

on:
  workflow_dispatch:
    inputs:
      version:
        description: version
        required: true

env:
  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 21

      - name: Install modules
        run: yarn install

      - name: Lint
        run: npm run lint

      - name: Test
        run: npm run test

      - name: Build
        run: npm run build

      - name: Slack notification - Publishing
        uses: slackapi/slack-github-action@v1.23.0
        with:
          channel-id: ${{secrets.SLACK_CHANNEL_ID}}
          payload: |
            {
              "text": "*JavaScript SDK*: Publishing version *${{ github.event.inputs.version }}* to *production* ..."
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - id: auth
        name: Login to GCloud
        uses: google-github-actions/auth@v2
        with:
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_PROD }}
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER_PROD }}

      - id: publish_latest_to_production_cdn
        name: Publish latest to production CDN
        uses: 'google-github-actions/upload-cloud-storage@v2'
        with:
          path: 'dist/_bundles/journifyio.min.js'
          destination: 'static.journify.io/@journifyio/js-sdk@latest'

      - id: publish_current_version_to_production_cdn
        name: Publish current version to production CDN
        uses: 'google-github-actions/upload-cloud-storage@v2'
        with:
          path: 'dist/_bundles/journifyio.min.js'
          destination: "static.journify.io/@journifyio/js-sdk@${{ github.event.inputs.version }}"

      - name: Publish to npm
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_TOKEN }}
          access: public

  

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'
          
            
      - name: Purge GCP CDN cache
        run: |
          gcloud compute url-maps invalidate-cdn-cache ${{ secrets.GLB_PROD }} \
            --path "/@journifyio/js-sdk@latest/journifyio.min.js" \
            --async

      - name: Slack notification - Published
        if: success()
        uses: slackapi/slack-github-action@v1.23.0
        with:
          channel-id: ${{secrets.SLACK_CHANNEL_ID}}
          payload: |
            {
              "text": "*JavaScript SDK*: :rocket: Published version *${{ github.event.inputs.version }}* to *production* :tada:!"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Slack notification - Publishing failed
        uses: slackapi/slack-github-action@v1.23.0
        if: failure()
        with:
          channel-id: ${{secrets.SLACK_CHANNEL_ID}}
          payload: |
            {
              "text": "<!here> *JavaScript SDK*: :x: Publishing of version *${{ github.event.inputs.version }}* to *production* failed :cry:!"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
